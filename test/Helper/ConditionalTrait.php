<?php

namespace Cradle\Helper;

use PHPUnit_Framework_TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-07-27 at 02:11:00.
 */
class Cradle_Helper_ConditionalTrait_Test extends PHPUnit_Framework_TestCase
{
    /**
     * @var ConditionalTrait
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new ConditionalTraitStub;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * covers Cradle\Helper\ConditionalTrait::when
     */
    public function testWhen()
    {
        $self = $this;
        $test = 'Good';
        $this->object->when(function() use ($self) {
            $self->assertInstanceOf('Cradle\Helper\ConditionalTraitStub', $this);
            return false;
        }, function() use ($self, &$test) {
            $self->assertInstanceOf('Cradle\Helper\ConditionalTraitStub', $this);
            $test = 'Bad';
        });

        $this->assertSame('Good', $test);

        $test = 'Good';
        $this->object->when(null, function() use (&$test) {
            $test = 'Bad';
        });

        $this->assertSame('Good', $test);

        $test = 'Good';
        $this->object->when(false, function() use (&$test) {
            $test = 'Bad';
        });

        $this->assertSame('Good', $test);


        $test = 'Good';
        $this->object->when(function() {
            return true;
        }, function() use (&$test) {
            $test = 'Bad';
        });

        $this->assertSame('Bad', $test);

        $test = 'Good';
        $this->object->when('hi', function() use (&$test) {
            $test = 'Bad';
        });

        $this->assertSame('Bad', $test);

        $test = 'Good';
        $this->object->when(true, function() use (&$test) {
            $test = 'Bad';
        });

        $this->assertSame('Bad', $test);

        $test = 'Not Sure';
        $this->object->when(function() use ($self) {
            $self->assertInstanceOf('Cradle\Helper\ConditionalTraitStub', $this);
            return false;
        }, function() use ($self, &$test) {
            $self->assertInstanceOf('Cradle\Helper\ConditionalTraitStub', $this);
            $test = 'Good';
        }, function() use ($self, &$test) {
            $self->assertInstanceOf('Cradle\Helper\ConditionalTraitStub', $this);
            $test = 'Bad';
        });

        $this->assertSame('Bad', $test);

        $this->assertSame('Bad', $this->object->when(true, function() {
            return 'Bad';
        }));
    }
}

if(!class_exists('Cradle\Helper\ConditionalTraitStub')) {
	class ConditionalTraitStub
	{
		use ConditionalTrait;
	}
}
